// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v3.12.4
// source: plugin/proto/server.proto

package golang

import (
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Requests
type KubernetesContainer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name          string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	MemoryRequest float32 `protobuf:"fixed32,2,opt,name=memory_request,json=memoryRequest,proto3" json:"memory_request,omitempty"`
	MemoryLimit   float32 `protobuf:"fixed32,3,opt,name=memory_limit,json=memoryLimit,proto3" json:"memory_limit,omitempty"`
	CpuRequest    float32 `protobuf:"fixed32,4,opt,name=cpu_request,json=cpuRequest,proto3" json:"cpu_request,omitempty"`
	CpuLimit      float32 `protobuf:"fixed32,5,opt,name=cpu_limit,json=cpuLimit,proto3" json:"cpu_limit,omitempty"`
}

func (x *KubernetesContainer) Reset() {
	*x = KubernetesContainer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugin_proto_server_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KubernetesContainer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KubernetesContainer) ProtoMessage() {}

func (x *KubernetesContainer) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_server_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KubernetesContainer.ProtoReflect.Descriptor instead.
func (*KubernetesContainer) Descriptor() ([]byte, []int) {
	return file_plugin_proto_server_proto_rawDescGZIP(), []int{0}
}

func (x *KubernetesContainer) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *KubernetesContainer) GetMemoryRequest() float32 {
	if x != nil {
		return x.MemoryRequest
	}
	return 0
}

func (x *KubernetesContainer) GetMemoryLimit() float32 {
	if x != nil {
		return x.MemoryLimit
	}
	return 0
}

func (x *KubernetesContainer) GetCpuRequest() float32 {
	if x != nil {
		return x.CpuRequest
	}
	return 0
}

func (x *KubernetesContainer) GetCpuLimit() float32 {
	if x != nil {
		return x.CpuLimit
	}
	return 0
}

type KubernetesPod struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name       string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Containers []*KubernetesContainer `protobuf:"bytes,3,rep,name=containers,proto3" json:"containers,omitempty"`
}

func (x *KubernetesPod) Reset() {
	*x = KubernetesPod{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugin_proto_server_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KubernetesPod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KubernetesPod) ProtoMessage() {}

func (x *KubernetesPod) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_server_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KubernetesPod.ProtoReflect.Descriptor instead.
func (*KubernetesPod) Descriptor() ([]byte, []int) {
	return file_plugin_proto_server_proto_rawDescGZIP(), []int{1}
}

func (x *KubernetesPod) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *KubernetesPod) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *KubernetesPod) GetContainers() []*KubernetesContainer {
	if x != nil {
		return x.Containers
	}
	return nil
}

type KubernetesContainerMetrics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cpu    map[string]float32 `protobuf:"bytes,1,rep,name=cpu,proto3" json:"cpu,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"fixed32,2,opt,name=value,proto3"`
	Memory map[string]float32 `protobuf:"bytes,2,rep,name=memory,proto3" json:"memory,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"fixed32,2,opt,name=value,proto3"`
}

func (x *KubernetesContainerMetrics) Reset() {
	*x = KubernetesContainerMetrics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugin_proto_server_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KubernetesContainerMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KubernetesContainerMetrics) ProtoMessage() {}

func (x *KubernetesContainerMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_server_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KubernetesContainerMetrics.ProtoReflect.Descriptor instead.
func (*KubernetesContainerMetrics) Descriptor() ([]byte, []int) {
	return file_plugin_proto_server_proto_rawDescGZIP(), []int{2}
}

func (x *KubernetesContainerMetrics) GetCpu() map[string]float32 {
	if x != nil {
		return x.Cpu
	}
	return nil
}

func (x *KubernetesContainerMetrics) GetMemory() map[string]float32 {
	if x != nil {
		return x.Memory
	}
	return nil
}

type KubernetesPodOptimizationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId      *wrappers.StringValue                  `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	CliVersion     *wrappers.StringValue                  `protobuf:"bytes,2,opt,name=cli_version,json=cliVersion,proto3" json:"cli_version,omitempty"`
	Identification map[string]string                      `protobuf:"bytes,3,rep,name=identification,proto3" json:"identification,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Pod            *KubernetesPod                         `protobuf:"bytes,4,opt,name=pod,proto3" json:"pod,omitempty"`
	Namespace      string                                 `protobuf:"bytes,5,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Preferences    map[string]*wrappers.StringValue       `protobuf:"bytes,6,rep,name=preferences,proto3" json:"preferences,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Metrics        map[string]*KubernetesContainerMetrics `protobuf:"bytes,7,rep,name=metrics,proto3" json:"metrics,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Loading        bool                                   `protobuf:"varint,8,opt,name=loading,proto3" json:"loading,omitempty"`
}

func (x *KubernetesPodOptimizationRequest) Reset() {
	*x = KubernetesPodOptimizationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugin_proto_server_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KubernetesPodOptimizationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KubernetesPodOptimizationRequest) ProtoMessage() {}

func (x *KubernetesPodOptimizationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_server_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KubernetesPodOptimizationRequest.ProtoReflect.Descriptor instead.
func (*KubernetesPodOptimizationRequest) Descriptor() ([]byte, []int) {
	return file_plugin_proto_server_proto_rawDescGZIP(), []int{3}
}

func (x *KubernetesPodOptimizationRequest) GetRequestId() *wrappers.StringValue {
	if x != nil {
		return x.RequestId
	}
	return nil
}

func (x *KubernetesPodOptimizationRequest) GetCliVersion() *wrappers.StringValue {
	if x != nil {
		return x.CliVersion
	}
	return nil
}

func (x *KubernetesPodOptimizationRequest) GetIdentification() map[string]string {
	if x != nil {
		return x.Identification
	}
	return nil
}

func (x *KubernetesPodOptimizationRequest) GetPod() *KubernetesPod {
	if x != nil {
		return x.Pod
	}
	return nil
}

func (x *KubernetesPodOptimizationRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *KubernetesPodOptimizationRequest) GetPreferences() map[string]*wrappers.StringValue {
	if x != nil {
		return x.Preferences
	}
	return nil
}

func (x *KubernetesPodOptimizationRequest) GetMetrics() map[string]*KubernetesContainerMetrics {
	if x != nil {
		return x.Metrics
	}
	return nil
}

func (x *KubernetesPodOptimizationRequest) GetLoading() bool {
	if x != nil {
		return x.Loading
	}
	return false
}

// Responses
type RightsizingKubernetesContainer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name          string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	MemoryRequest float32 `protobuf:"fixed32,2,opt,name=memory_request,json=memoryRequest,proto3" json:"memory_request,omitempty"`
	MemoryLimit   float32 `protobuf:"fixed32,3,opt,name=memory_limit,json=memoryLimit,proto3" json:"memory_limit,omitempty"`
	CpuRequest    float32 `protobuf:"fixed32,4,opt,name=cpu_request,json=cpuRequest,proto3" json:"cpu_request,omitempty"`
	CpuLimit      float32 `protobuf:"fixed32,5,opt,name=cpu_limit,json=cpuLimit,proto3" json:"cpu_limit,omitempty"`
}

func (x *RightsizingKubernetesContainer) Reset() {
	*x = RightsizingKubernetesContainer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugin_proto_server_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RightsizingKubernetesContainer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RightsizingKubernetesContainer) ProtoMessage() {}

func (x *RightsizingKubernetesContainer) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_server_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RightsizingKubernetesContainer.ProtoReflect.Descriptor instead.
func (*RightsizingKubernetesContainer) Descriptor() ([]byte, []int) {
	return file_plugin_proto_server_proto_rawDescGZIP(), []int{4}
}

func (x *RightsizingKubernetesContainer) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RightsizingKubernetesContainer) GetMemoryRequest() float32 {
	if x != nil {
		return x.MemoryRequest
	}
	return 0
}

func (x *RightsizingKubernetesContainer) GetMemoryLimit() float32 {
	if x != nil {
		return x.MemoryLimit
	}
	return 0
}

func (x *RightsizingKubernetesContainer) GetCpuRequest() float32 {
	if x != nil {
		return x.CpuRequest
	}
	return 0
}

func (x *RightsizingKubernetesContainer) GetCpuLimit() float32 {
	if x != nil {
		return x.CpuLimit
	}
	return 0
}

type KubernetesContainerRightsizingRecommendation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name              string                          `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Current           *RightsizingKubernetesContainer `protobuf:"bytes,2,opt,name=current,proto3" json:"current,omitempty"`
	Recommended       *RightsizingKubernetesContainer `protobuf:"bytes,3,opt,name=recommended,proto3" json:"recommended,omitempty"`
	MemoryTrimmedMean *wrappers.FloatValue            `protobuf:"bytes,4,opt,name=memory_trimmed_mean,json=memoryTrimmedMean,proto3" json:"memory_trimmed_mean,omitempty"`
	MemoryMax         *wrappers.FloatValue            `protobuf:"bytes,5,opt,name=memory_max,json=memoryMax,proto3" json:"memory_max,omitempty"`
	CpuTrimmedMean    *wrappers.FloatValue            `protobuf:"bytes,6,opt,name=cpu_trimmed_mean,json=cpuTrimmedMean,proto3" json:"cpu_trimmed_mean,omitempty"`
	CpuMax            *wrappers.FloatValue            `protobuf:"bytes,7,opt,name=cpu_max,json=cpuMax,proto3" json:"cpu_max,omitempty"`
	Description       string                          `protobuf:"bytes,8,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *KubernetesContainerRightsizingRecommendation) Reset() {
	*x = KubernetesContainerRightsizingRecommendation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugin_proto_server_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KubernetesContainerRightsizingRecommendation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KubernetesContainerRightsizingRecommendation) ProtoMessage() {}

func (x *KubernetesContainerRightsizingRecommendation) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_server_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KubernetesContainerRightsizingRecommendation.ProtoReflect.Descriptor instead.
func (*KubernetesContainerRightsizingRecommendation) Descriptor() ([]byte, []int) {
	return file_plugin_proto_server_proto_rawDescGZIP(), []int{5}
}

func (x *KubernetesContainerRightsizingRecommendation) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *KubernetesContainerRightsizingRecommendation) GetCurrent() *RightsizingKubernetesContainer {
	if x != nil {
		return x.Current
	}
	return nil
}

func (x *KubernetesContainerRightsizingRecommendation) GetRecommended() *RightsizingKubernetesContainer {
	if x != nil {
		return x.Recommended
	}
	return nil
}

func (x *KubernetesContainerRightsizingRecommendation) GetMemoryTrimmedMean() *wrappers.FloatValue {
	if x != nil {
		return x.MemoryTrimmedMean
	}
	return nil
}

func (x *KubernetesContainerRightsizingRecommendation) GetMemoryMax() *wrappers.FloatValue {
	if x != nil {
		return x.MemoryMax
	}
	return nil
}

func (x *KubernetesContainerRightsizingRecommendation) GetCpuTrimmedMean() *wrappers.FloatValue {
	if x != nil {
		return x.CpuTrimmedMean
	}
	return nil
}

func (x *KubernetesContainerRightsizingRecommendation) GetCpuMax() *wrappers.FloatValue {
	if x != nil {
		return x.CpuMax
	}
	return nil
}

func (x *KubernetesContainerRightsizingRecommendation) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type KubernetesPodRightsizingRecommendation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name              string                                          `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ContainerResizing []*KubernetesContainerRightsizingRecommendation `protobuf:"bytes,2,rep,name=container_resizing,json=containerResizing,proto3" json:"container_resizing,omitempty"`
}

func (x *KubernetesPodRightsizingRecommendation) Reset() {
	*x = KubernetesPodRightsizingRecommendation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugin_proto_server_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KubernetesPodRightsizingRecommendation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KubernetesPodRightsizingRecommendation) ProtoMessage() {}

func (x *KubernetesPodRightsizingRecommendation) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_server_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KubernetesPodRightsizingRecommendation.ProtoReflect.Descriptor instead.
func (*KubernetesPodRightsizingRecommendation) Descriptor() ([]byte, []int) {
	return file_plugin_proto_server_proto_rawDescGZIP(), []int{6}
}

func (x *KubernetesPodRightsizingRecommendation) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *KubernetesPodRightsizingRecommendation) GetContainerResizing() []*KubernetesContainerRightsizingRecommendation {
	if x != nil {
		return x.ContainerResizing
	}
	return nil
}

type KubernetesPodOptimizationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rightsizing *KubernetesPodRightsizingRecommendation `protobuf:"bytes,1,opt,name=rightsizing,proto3" json:"rightsizing,omitempty"`
}

func (x *KubernetesPodOptimizationResponse) Reset() {
	*x = KubernetesPodOptimizationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugin_proto_server_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KubernetesPodOptimizationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KubernetesPodOptimizationResponse) ProtoMessage() {}

func (x *KubernetesPodOptimizationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_server_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KubernetesPodOptimizationResponse.ProtoReflect.Descriptor instead.
func (*KubernetesPodOptimizationResponse) Descriptor() ([]byte, []int) {
	return file_plugin_proto_server_proto_rawDescGZIP(), []int{7}
}

func (x *KubernetesPodOptimizationResponse) GetRightsizing() *KubernetesPodRightsizingRecommendation {
	if x != nil {
		return x.Rightsizing
	}
	return nil
}

var File_plugin_proto_server_proto protoreflect.FileDescriptor

var file_plugin_proto_server_proto_rawDesc = []byte{
	0x0a, 0x19, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x20, 0x70, 0x6c, 0x75,
	0x67, 0x69, 0x6e, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x2e, 0x6f, 0x70,
	0x74, 0x69, 0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x1a, 0x1e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77,
	0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb1, 0x01,
	0x0a, 0x13, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x6d, 0x65, 0x6d,
	0x6f, 0x72, 0x79, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x0d, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x70, 0x75, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x63, 0x70, 0x75, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x70, 0x75, 0x5f, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x63, 0x70, 0x75, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x22, 0x8a, 0x01, 0x0a, 0x0d, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73,
	0x50, 0x6f, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x55, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x61,
	0x69, 0x6e, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x70, 0x6c,
	0x75, 0x67, 0x69, 0x6e, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x2e, 0x6f,
	0x70, 0x74, 0x69, 0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4b,
	0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x22, 0xca,
	0x02, 0x0a, 0x1a, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x43, 0x6f, 0x6e,
	0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x12, 0x57, 0x0a,
	0x03, 0x63, 0x70, 0x75, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x45, 0x2e, 0x70, 0x6c, 0x75,
	0x67, 0x69, 0x6e, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x2e, 0x6f, 0x70,
	0x74, 0x69, 0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x75,
	0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65,
	0x72, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x43, 0x70, 0x75, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x03, 0x63, 0x70, 0x75, 0x12, 0x60, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x48, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x6b,
	0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e,
	0x65, 0x74, 0x65, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x4d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x73, 0x2e, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x1a, 0x36, 0x0a, 0x08, 0x43, 0x70, 0x75, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x1a, 0x39, 0x0a, 0x0b, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x96, 0x07, 0x0a, 0x20,
	0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x50, 0x6f, 0x64, 0x4f, 0x70, 0x74,
	0x69, 0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x3b, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x3d, 0x0a,
	0x0b, 0x63, 0x6c, 0x69, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x0a, 0x63, 0x6c, 0x69, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x7e, 0x0a, 0x0e,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x56, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x6b, 0x75, 0x62,
	0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74,
	0x65, 0x73, 0x50, 0x6f, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0e, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x41, 0x0a, 0x03,
	0x70, 0x6f, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x70, 0x6c, 0x75, 0x67,
	0x69, 0x6e, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x2e, 0x6f, 0x70, 0x74,
	0x69, 0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x75, 0x62,
	0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x50, 0x6f, 0x64, 0x52, 0x03, 0x70, 0x6f, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x75, 0x0a,
	0x0b, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x53, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x6b, 0x75, 0x62, 0x65, 0x72,
	0x6e, 0x65, 0x74, 0x65, 0x73, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73,
	0x50, 0x6f, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x73, 0x12, 0x69, 0x0a, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x18,
	0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4f, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x6b, 0x75,
	0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65,
	0x74, 0x65, 0x73, 0x50, 0x6f, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x6c, 0x6f, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x6c, 0x6f, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x1a, 0x41, 0x0a, 0x13, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x5c, 0x0a, 0x10,
	0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x32, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x78, 0x0a, 0x0c, 0x4d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x52, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x70, 0x6c,
	0x75, 0x67, 0x69, 0x6e, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x2e, 0x6f,
	0x70, 0x74, 0x69, 0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4b,
	0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0xbc, 0x01, 0x0a, 0x1e, 0x52, 0x69, 0x67, 0x68, 0x74, 0x73, 0x69,
	0x7a, 0x69, 0x6e, 0x67, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x6d,
	0x65, 0x6d, 0x6f, 0x72, 0x79, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x0d, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x5f, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x70, 0x75, 0x5f, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x63, 0x70, 0x75, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x70, 0x75, 0x5f, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x63, 0x70, 0x75, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x22, 0xaa, 0x04, 0x0a, 0x2c, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74,
	0x65, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x69, 0x67, 0x68, 0x74,
	0x73, 0x69, 0x7a, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x5a, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x70, 0x6c, 0x75, 0x67,
	0x69, 0x6e, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x2e, 0x6f, 0x70, 0x74,
	0x69, 0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x69, 0x67,
	0x68, 0x74, 0x73, 0x69, 0x7a, 0x69, 0x6e, 0x67, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74,
	0x65, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x07, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x12, 0x62, 0x0a, 0x0b, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x64, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x70, 0x6c, 0x75, 0x67,
	0x69, 0x6e, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x2e, 0x6f, 0x70, 0x74,
	0x69, 0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x69, 0x67,
	0x68, 0x74, 0x73, 0x69, 0x7a, 0x69, 0x6e, 0x67, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74,
	0x65, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x0b, 0x72, 0x65, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x12, 0x4b, 0x0a, 0x13, 0x6d, 0x65, 0x6d, 0x6f,
	0x72, 0x79, 0x5f, 0x74, 0x72, 0x69, 0x6d, 0x6d, 0x65, 0x64, 0x5f, 0x6d, 0x65, 0x61, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x11, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x54, 0x72, 0x69, 0x6d, 0x6d, 0x65,
	0x64, 0x4d, 0x65, 0x61, 0x6e, 0x12, 0x3a, 0x0a, 0x0a, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x5f,
	0x6d, 0x61, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x6c, 0x6f, 0x61,
	0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x09, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x4d, 0x61,
	0x78, 0x12, 0x45, 0x0a, 0x10, 0x63, 0x70, 0x75, 0x5f, 0x74, 0x72, 0x69, 0x6d, 0x6d, 0x65, 0x64,
	0x5f, 0x6d, 0x65, 0x61, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x6c,
	0x6f, 0x61, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0e, 0x63, 0x70, 0x75, 0x54, 0x72, 0x69,
	0x6d, 0x6d, 0x65, 0x64, 0x4d, 0x65, 0x61, 0x6e, 0x12, 0x34, 0x0a, 0x07, 0x63, 0x70, 0x75, 0x5f,
	0x6d, 0x61, 0x78, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x6c, 0x6f, 0x61,
	0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06, 0x63, 0x70, 0x75, 0x4d, 0x61, 0x78, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0xbb, 0x01, 0x0a, 0x26, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x50,
	0x6f, 0x64, 0x52, 0x69, 0x67, 0x68, 0x74, 0x73, 0x69, 0x7a, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x7d, 0x0a, 0x12, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x73,
	0x69, 0x7a, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4e, 0x2e, 0x70, 0x6c,
	0x75, 0x67, 0x69, 0x6e, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x2e, 0x6f,
	0x70, 0x74, 0x69, 0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4b,
	0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x52, 0x69, 0x67, 0x68, 0x74, 0x73, 0x69, 0x7a, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x11, 0x63, 0x6f, 0x6e,
	0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x73, 0x69, 0x7a, 0x69, 0x6e, 0x67, 0x22, 0x8f,
	0x01, 0x0a, 0x21, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x50, 0x6f, 0x64,
	0x4f, 0x70, 0x74, 0x69, 0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6a, 0x0a, 0x0b, 0x72, 0x69, 0x67, 0x68, 0x74, 0x73, 0x69, 0x7a,
	0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x48, 0x2e, 0x70, 0x6c, 0x75, 0x67,
	0x69, 0x6e, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x2e, 0x6f, 0x70, 0x74,
	0x69, 0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x75, 0x62,
	0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x50, 0x6f, 0x64, 0x52, 0x69, 0x67, 0x68, 0x74, 0x73,
	0x69, 0x7a, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x72, 0x69, 0x67, 0x68, 0x74, 0x73, 0x69, 0x7a, 0x69, 0x6e, 0x67,
	0x32, 0xbb, 0x01, 0x0a, 0x0c, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0xaa, 0x01, 0x0a, 0x19, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73,
	0x50, 0x6f, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x42, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74,
	0x65, 0x73, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x50, 0x6f, 0x64,
	0x4f, 0x70, 0x74, 0x69, 0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x43, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x6b, 0x75, 0x62, 0x65,
	0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65,
	0x73, 0x50, 0x6f, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x42, 0x3f,
	0x5a, 0x3d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6b, 0x61, 0x79,
	0x74, 0x75, 0x2d, 0x69, 0x6f, 0x2f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2d, 0x6b, 0x75, 0x62,
	0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x2f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x72, 0x63, 0x2f, 0x67, 0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_plugin_proto_server_proto_rawDescOnce sync.Once
	file_plugin_proto_server_proto_rawDescData = file_plugin_proto_server_proto_rawDesc
)

func file_plugin_proto_server_proto_rawDescGZIP() []byte {
	file_plugin_proto_server_proto_rawDescOnce.Do(func() {
		file_plugin_proto_server_proto_rawDescData = protoimpl.X.CompressGZIP(file_plugin_proto_server_proto_rawDescData)
	})
	return file_plugin_proto_server_proto_rawDescData
}

var file_plugin_proto_server_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_plugin_proto_server_proto_goTypes = []interface{}{
	(*KubernetesContainer)(nil),                          // 0: pluginkubernetes.optimization.v1.KubernetesContainer
	(*KubernetesPod)(nil),                                // 1: pluginkubernetes.optimization.v1.KubernetesPod
	(*KubernetesContainerMetrics)(nil),                   // 2: pluginkubernetes.optimization.v1.KubernetesContainerMetrics
	(*KubernetesPodOptimizationRequest)(nil),             // 3: pluginkubernetes.optimization.v1.KubernetesPodOptimizationRequest
	(*RightsizingKubernetesContainer)(nil),               // 4: pluginkubernetes.optimization.v1.RightsizingKubernetesContainer
	(*KubernetesContainerRightsizingRecommendation)(nil), // 5: pluginkubernetes.optimization.v1.KubernetesContainerRightsizingRecommendation
	(*KubernetesPodRightsizingRecommendation)(nil),       // 6: pluginkubernetes.optimization.v1.KubernetesPodRightsizingRecommendation
	(*KubernetesPodOptimizationResponse)(nil),            // 7: pluginkubernetes.optimization.v1.KubernetesPodOptimizationResponse
	nil,                          // 8: pluginkubernetes.optimization.v1.KubernetesContainerMetrics.CpuEntry
	nil,                          // 9: pluginkubernetes.optimization.v1.KubernetesContainerMetrics.MemoryEntry
	nil,                          // 10: pluginkubernetes.optimization.v1.KubernetesPodOptimizationRequest.IdentificationEntry
	nil,                          // 11: pluginkubernetes.optimization.v1.KubernetesPodOptimizationRequest.PreferencesEntry
	nil,                          // 12: pluginkubernetes.optimization.v1.KubernetesPodOptimizationRequest.MetricsEntry
	(*wrappers.StringValue)(nil), // 13: google.protobuf.StringValue
	(*wrappers.FloatValue)(nil),  // 14: google.protobuf.FloatValue
}
var file_plugin_proto_server_proto_depIdxs = []int32{
	0,  // 0: pluginkubernetes.optimization.v1.KubernetesPod.containers:type_name -> pluginkubernetes.optimization.v1.KubernetesContainer
	8,  // 1: pluginkubernetes.optimization.v1.KubernetesContainerMetrics.cpu:type_name -> pluginkubernetes.optimization.v1.KubernetesContainerMetrics.CpuEntry
	9,  // 2: pluginkubernetes.optimization.v1.KubernetesContainerMetrics.memory:type_name -> pluginkubernetes.optimization.v1.KubernetesContainerMetrics.MemoryEntry
	13, // 3: pluginkubernetes.optimization.v1.KubernetesPodOptimizationRequest.request_id:type_name -> google.protobuf.StringValue
	13, // 4: pluginkubernetes.optimization.v1.KubernetesPodOptimizationRequest.cli_version:type_name -> google.protobuf.StringValue
	10, // 5: pluginkubernetes.optimization.v1.KubernetesPodOptimizationRequest.identification:type_name -> pluginkubernetes.optimization.v1.KubernetesPodOptimizationRequest.IdentificationEntry
	1,  // 6: pluginkubernetes.optimization.v1.KubernetesPodOptimizationRequest.pod:type_name -> pluginkubernetes.optimization.v1.KubernetesPod
	11, // 7: pluginkubernetes.optimization.v1.KubernetesPodOptimizationRequest.preferences:type_name -> pluginkubernetes.optimization.v1.KubernetesPodOptimizationRequest.PreferencesEntry
	12, // 8: pluginkubernetes.optimization.v1.KubernetesPodOptimizationRequest.metrics:type_name -> pluginkubernetes.optimization.v1.KubernetesPodOptimizationRequest.MetricsEntry
	4,  // 9: pluginkubernetes.optimization.v1.KubernetesContainerRightsizingRecommendation.current:type_name -> pluginkubernetes.optimization.v1.RightsizingKubernetesContainer
	4,  // 10: pluginkubernetes.optimization.v1.KubernetesContainerRightsizingRecommendation.recommended:type_name -> pluginkubernetes.optimization.v1.RightsizingKubernetesContainer
	14, // 11: pluginkubernetes.optimization.v1.KubernetesContainerRightsizingRecommendation.memory_trimmed_mean:type_name -> google.protobuf.FloatValue
	14, // 12: pluginkubernetes.optimization.v1.KubernetesContainerRightsizingRecommendation.memory_max:type_name -> google.protobuf.FloatValue
	14, // 13: pluginkubernetes.optimization.v1.KubernetesContainerRightsizingRecommendation.cpu_trimmed_mean:type_name -> google.protobuf.FloatValue
	14, // 14: pluginkubernetes.optimization.v1.KubernetesContainerRightsizingRecommendation.cpu_max:type_name -> google.protobuf.FloatValue
	5,  // 15: pluginkubernetes.optimization.v1.KubernetesPodRightsizingRecommendation.container_resizing:type_name -> pluginkubernetes.optimization.v1.KubernetesContainerRightsizingRecommendation
	6,  // 16: pluginkubernetes.optimization.v1.KubernetesPodOptimizationResponse.rightsizing:type_name -> pluginkubernetes.optimization.v1.KubernetesPodRightsizingRecommendation
	13, // 17: pluginkubernetes.optimization.v1.KubernetesPodOptimizationRequest.PreferencesEntry.value:type_name -> google.protobuf.StringValue
	2,  // 18: pluginkubernetes.optimization.v1.KubernetesPodOptimizationRequest.MetricsEntry.value:type_name -> pluginkubernetes.optimization.v1.KubernetesContainerMetrics
	3,  // 19: pluginkubernetes.optimization.v1.Optimization.KubernetesPodOptimization:input_type -> pluginkubernetes.optimization.v1.KubernetesPodOptimizationRequest
	7,  // 20: pluginkubernetes.optimization.v1.Optimization.KubernetesPodOptimization:output_type -> pluginkubernetes.optimization.v1.KubernetesPodOptimizationResponse
	20, // [20:21] is the sub-list for method output_type
	19, // [19:20] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_plugin_proto_server_proto_init() }
func file_plugin_proto_server_proto_init() {
	if File_plugin_proto_server_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_plugin_proto_server_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KubernetesContainer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugin_proto_server_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KubernetesPod); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugin_proto_server_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KubernetesContainerMetrics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugin_proto_server_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KubernetesPodOptimizationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugin_proto_server_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RightsizingKubernetesContainer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugin_proto_server_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KubernetesContainerRightsizingRecommendation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugin_proto_server_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KubernetesPodRightsizingRecommendation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugin_proto_server_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KubernetesPodOptimizationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_plugin_proto_server_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_plugin_proto_server_proto_goTypes,
		DependencyIndexes: file_plugin_proto_server_proto_depIdxs,
		MessageInfos:      file_plugin_proto_server_proto_msgTypes,
	}.Build()
	File_plugin_proto_server_proto = out.File
	file_plugin_proto_server_proto_rawDesc = nil
	file_plugin_proto_server_proto_goTypes = nil
	file_plugin_proto_server_proto_depIdxs = nil
}
